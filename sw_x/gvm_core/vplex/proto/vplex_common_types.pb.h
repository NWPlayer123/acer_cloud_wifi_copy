// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vplex_common_types.proto

#ifndef PROTOBUF_vplex_5fcommon_5ftypes_2eproto__INCLUDED
#define PROTOBUF_vplex_5fcommon_5ftypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace vplex {
namespace common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_vplex_5fcommon_5ftypes_2eproto();
void protobuf_AssignDesc_vplex_5fcommon_5ftypes_2eproto();
void protobuf_ShutdownFile_vplex_5fcommon_5ftypes_2eproto();

class ContentRating;

// ===================================================================

class ContentRating : public ::google::protobuf::Message {
 public:
  ContentRating();
  virtual ~ContentRating();
  
  ContentRating(const ContentRating& from);
  
  inline ContentRating& operator=(const ContentRating& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentRating& default_instance();
  
  void Swap(ContentRating* other);
  
  // implements Message ----------------------------------------------
  
  ContentRating* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContentRating& from);
  void MergeFrom(const ContentRating& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string rating_system = 1;
  inline bool has_rating_system() const;
  inline void clear_rating_system();
  static const int kRatingSystemFieldNumber = 1;
  inline const ::std::string& rating_system() const;
  inline void set_rating_system(const ::std::string& value);
  inline void set_rating_system(const char* value);
  inline void set_rating_system(const char* value, size_t size);
  inline ::std::string* mutable_rating_system();
  inline ::std::string* release_rating_system();
  
  // optional string rating_value = 2;
  inline bool has_rating_value() const;
  inline void clear_rating_value();
  static const int kRatingValueFieldNumber = 2;
  inline const ::std::string& rating_value() const;
  inline void set_rating_value(const ::std::string& value);
  inline void set_rating_value(const char* value);
  inline void set_rating_value(const char* value, size_t size);
  inline ::std::string* mutable_rating_value();
  inline ::std::string* release_rating_value();
  
  // repeated string content_descriptors = 3;
  inline int content_descriptors_size() const;
  inline void clear_content_descriptors();
  static const int kContentDescriptorsFieldNumber = 3;
  inline const ::std::string& content_descriptors(int index) const;
  inline ::std::string* mutable_content_descriptors(int index);
  inline void set_content_descriptors(int index, const ::std::string& value);
  inline void set_content_descriptors(int index, const char* value);
  inline void set_content_descriptors(int index, const char* value, size_t size);
  inline ::std::string* add_content_descriptors();
  inline void add_content_descriptors(const ::std::string& value);
  inline void add_content_descriptors(const char* value);
  inline void add_content_descriptors(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& content_descriptors() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_content_descriptors();
  
  // @@protoc_insertion_point(class_scope:vplex.common.ContentRating)
 private:
  inline void set_has_rating_system();
  inline void clear_has_rating_system();
  inline void set_has_rating_value();
  inline void clear_has_rating_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* rating_system_;
  ::std::string* rating_value_;
  ::google::protobuf::RepeatedPtrField< ::std::string> content_descriptors_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_vplex_5fcommon_5ftypes_2eproto();
  friend void protobuf_AssignDesc_vplex_5fcommon_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_vplex_5fcommon_5ftypes_2eproto();
  
  void InitAsDefaultInstance();
  static ContentRating* default_instance_;
};
// ===================================================================


// ===================================================================

// ContentRating

// optional string rating_system = 1;
inline bool ContentRating::has_rating_system() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContentRating::set_has_rating_system() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContentRating::clear_has_rating_system() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContentRating::clear_rating_system() {
  if (rating_system_ != &::google::protobuf::internal::kEmptyString) {
    rating_system_->clear();
  }
  clear_has_rating_system();
}
inline const ::std::string& ContentRating::rating_system() const {
  return *rating_system_;
}
inline void ContentRating::set_rating_system(const ::std::string& value) {
  set_has_rating_system();
  if (rating_system_ == &::google::protobuf::internal::kEmptyString) {
    rating_system_ = new ::std::string;
  }
  rating_system_->assign(value);
}
inline void ContentRating::set_rating_system(const char* value) {
  set_has_rating_system();
  if (rating_system_ == &::google::protobuf::internal::kEmptyString) {
    rating_system_ = new ::std::string;
  }
  rating_system_->assign(value);
}
inline void ContentRating::set_rating_system(const char* value, size_t size) {
  set_has_rating_system();
  if (rating_system_ == &::google::protobuf::internal::kEmptyString) {
    rating_system_ = new ::std::string;
  }
  rating_system_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ContentRating::mutable_rating_system() {
  set_has_rating_system();
  if (rating_system_ == &::google::protobuf::internal::kEmptyString) {
    rating_system_ = new ::std::string;
  }
  return rating_system_;
}
inline ::std::string* ContentRating::release_rating_system() {
  clear_has_rating_system();
  if (rating_system_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rating_system_;
    rating_system_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string rating_value = 2;
inline bool ContentRating::has_rating_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContentRating::set_has_rating_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContentRating::clear_has_rating_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContentRating::clear_rating_value() {
  if (rating_value_ != &::google::protobuf::internal::kEmptyString) {
    rating_value_->clear();
  }
  clear_has_rating_value();
}
inline const ::std::string& ContentRating::rating_value() const {
  return *rating_value_;
}
inline void ContentRating::set_rating_value(const ::std::string& value) {
  set_has_rating_value();
  if (rating_value_ == &::google::protobuf::internal::kEmptyString) {
    rating_value_ = new ::std::string;
  }
  rating_value_->assign(value);
}
inline void ContentRating::set_rating_value(const char* value) {
  set_has_rating_value();
  if (rating_value_ == &::google::protobuf::internal::kEmptyString) {
    rating_value_ = new ::std::string;
  }
  rating_value_->assign(value);
}
inline void ContentRating::set_rating_value(const char* value, size_t size) {
  set_has_rating_value();
  if (rating_value_ == &::google::protobuf::internal::kEmptyString) {
    rating_value_ = new ::std::string;
  }
  rating_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ContentRating::mutable_rating_value() {
  set_has_rating_value();
  if (rating_value_ == &::google::protobuf::internal::kEmptyString) {
    rating_value_ = new ::std::string;
  }
  return rating_value_;
}
inline ::std::string* ContentRating::release_rating_value() {
  clear_has_rating_value();
  if (rating_value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rating_value_;
    rating_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated string content_descriptors = 3;
inline int ContentRating::content_descriptors_size() const {
  return content_descriptors_.size();
}
inline void ContentRating::clear_content_descriptors() {
  content_descriptors_.Clear();
}
inline const ::std::string& ContentRating::content_descriptors(int index) const {
  return content_descriptors_.Get(index);
}
inline ::std::string* ContentRating::mutable_content_descriptors(int index) {
  return content_descriptors_.Mutable(index);
}
inline void ContentRating::set_content_descriptors(int index, const ::std::string& value) {
  content_descriptors_.Mutable(index)->assign(value);
}
inline void ContentRating::set_content_descriptors(int index, const char* value) {
  content_descriptors_.Mutable(index)->assign(value);
}
inline void ContentRating::set_content_descriptors(int index, const char* value, size_t size) {
  content_descriptors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ContentRating::add_content_descriptors() {
  return content_descriptors_.Add();
}
inline void ContentRating::add_content_descriptors(const ::std::string& value) {
  content_descriptors_.Add()->assign(value);
}
inline void ContentRating::add_content_descriptors(const char* value) {
  content_descriptors_.Add()->assign(value);
}
inline void ContentRating::add_content_descriptors(const char* value, size_t size) {
  content_descriptors_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ContentRating::content_descriptors() const {
  return content_descriptors_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ContentRating::mutable_content_descriptors() {
  return &content_descriptors_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace vplex

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vplex_5fcommon_5ftypes_2eproto__INCLUDED
