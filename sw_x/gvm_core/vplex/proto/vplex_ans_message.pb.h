// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vplex_ans_message.proto

#ifndef PROTOBUF_vplex_5fans_5fmessage_2eproto__INCLUDED
#define PROTOBUF_vplex_5fans_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace vplex {
namespace ans {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_vplex_5fans_5fmessage_2eproto();
void protobuf_AssignDesc_vplex_5fans_5fmessage_2eproto();
void protobuf_ShutdownFile_vplex_5fans_5fmessage_2eproto();

class UserDeviceMsg_t;
class SessionExpiredDetails;
class PairingRequestAttribute;
class PairingRequestDetails;

enum ANS_NotificationType_t {
  ANS_TYPE_SYNC_AGENT = 2,
  ANS_TYPE_PROXY = 3,
  ANS_TYPE_CLIENT_CONN = 4,
  ANS_TYPE_COMMUNITY = 5,
  ANS_TYPE_SERVER_WAKEUP = 6,
  ANS_TYPE_SESSION_EXPIRED = 11,
  ANS_TYPE_USER_DEVICE_MESSAGE = 12,
  ANS_TYPE_PAIRING_REQUESTED = 13,
  ANS_TYPE_KEEPALIVE = 254
};
bool ANS_NotificationType_t_IsValid(int value);
const ANS_NotificationType_t ANS_NotificationType_t_MIN = ANS_TYPE_SYNC_AGENT;
const ANS_NotificationType_t ANS_NotificationType_t_MAX = ANS_TYPE_KEEPALIVE;
const int ANS_NotificationType_t_ARRAYSIZE = ANS_NotificationType_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* ANS_NotificationType_t_descriptor();
inline const ::std::string& ANS_NotificationType_t_Name(ANS_NotificationType_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    ANS_NotificationType_t_descriptor(), value);
}
inline bool ANS_NotificationType_t_Parse(
    const ::std::string& name, ANS_NotificationType_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ANS_NotificationType_t>(
    ANS_NotificationType_t_descriptor(), name, value);
}
enum UserDeviceMsgType_t {
  REMOTE_SW_UPDATE_REQ = 1
};
bool UserDeviceMsgType_t_IsValid(int value);
const UserDeviceMsgType_t UserDeviceMsgType_t_MIN = REMOTE_SW_UPDATE_REQ;
const UserDeviceMsgType_t UserDeviceMsgType_t_MAX = REMOTE_SW_UPDATE_REQ;
const int UserDeviceMsgType_t_ARRAYSIZE = UserDeviceMsgType_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserDeviceMsgType_t_descriptor();
inline const ::std::string& UserDeviceMsgType_t_Name(UserDeviceMsgType_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserDeviceMsgType_t_descriptor(), value);
}
inline bool UserDeviceMsgType_t_Parse(
    const ::std::string& name, UserDeviceMsgType_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserDeviceMsgType_t>(
    UserDeviceMsgType_t_descriptor(), name, value);
}
// ===================================================================

class UserDeviceMsg_t : public ::google::protobuf::Message {
 public:
  UserDeviceMsg_t();
  virtual ~UserDeviceMsg_t();
  
  UserDeviceMsg_t(const UserDeviceMsg_t& from);
  
  inline UserDeviceMsg_t& operator=(const UserDeviceMsg_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDeviceMsg_t& default_instance();
  
  void Swap(UserDeviceMsg_t* other);
  
  // implements Message ----------------------------------------------
  
  UserDeviceMsg_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserDeviceMsg_t& from);
  void MergeFrom(const UserDeviceMsg_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required fixed64 srcDeviceId = 1;
  inline bool has_srcdeviceid() const;
  inline void clear_srcdeviceid();
  static const int kSrcDeviceIdFieldNumber = 1;
  inline ::google::protobuf::uint64 srcdeviceid() const;
  inline void set_srcdeviceid(::google::protobuf::uint64 value);
  
  // required .vplex.ans.UserDeviceMsgType_t msgType = 2;
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 2;
  inline vplex::ans::UserDeviceMsgType_t msgtype() const;
  inline void set_msgtype(vplex::ans::UserDeviceMsgType_t value);
  
  // @@protoc_insertion_point(class_scope:vplex.ans.UserDeviceMsg_t)
 private:
  inline void set_has_srcdeviceid();
  inline void clear_has_srcdeviceid();
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 srcdeviceid_;
  int msgtype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_vplex_5fans_5fmessage_2eproto();
  friend void protobuf_AssignDesc_vplex_5fans_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_vplex_5fans_5fmessage_2eproto();
  
  void InitAsDefaultInstance();
  static UserDeviceMsg_t* default_instance_;
};
// -------------------------------------------------------------------

class SessionExpiredDetails : public ::google::protobuf::Message {
 public:
  SessionExpiredDetails();
  virtual ~SessionExpiredDetails();
  
  SessionExpiredDetails(const SessionExpiredDetails& from);
  
  inline SessionExpiredDetails& operator=(const SessionExpiredDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionExpiredDetails& default_instance();
  
  void Swap(SessionExpiredDetails* other);
  
  // implements Message ----------------------------------------------
  
  SessionExpiredDetails* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionExpiredDetails& from);
  void MergeFrom(const SessionExpiredDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool device_unlinked = 1 [default = false];
  inline bool has_device_unlinked() const;
  inline void clear_device_unlinked();
  static const int kDeviceUnlinkedFieldNumber = 1;
  inline bool device_unlinked() const;
  inline void set_device_unlinked(bool value);
  
  // @@protoc_insertion_point(class_scope:vplex.ans.SessionExpiredDetails)
 private:
  inline void set_has_device_unlinked();
  inline void clear_has_device_unlinked();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool device_unlinked_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_vplex_5fans_5fmessage_2eproto();
  friend void protobuf_AssignDesc_vplex_5fans_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_vplex_5fans_5fmessage_2eproto();
  
  void InitAsDefaultInstance();
  static SessionExpiredDetails* default_instance_;
};
// -------------------------------------------------------------------

class PairingRequestAttribute : public ::google::protobuf::Message {
 public:
  PairingRequestAttribute();
  virtual ~PairingRequestAttribute();
  
  PairingRequestAttribute(const PairingRequestAttribute& from);
  
  inline PairingRequestAttribute& operator=(const PairingRequestAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PairingRequestAttribute& default_instance();
  
  void Swap(PairingRequestAttribute* other);
  
  // implements Message ----------------------------------------------
  
  PairingRequestAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PairingRequestAttribute& from);
  void MergeFrom(const PairingRequestAttribute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  
  // required string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // @@protoc_insertion_point(class_scope:vplex.ans.PairingRequestAttribute)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* key_;
  ::std::string* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_vplex_5fans_5fmessage_2eproto();
  friend void protobuf_AssignDesc_vplex_5fans_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_vplex_5fans_5fmessage_2eproto();
  
  void InitAsDefaultInstance();
  static PairingRequestAttribute* default_instance_;
};
// -------------------------------------------------------------------

class PairingRequestDetails : public ::google::protobuf::Message {
 public:
  PairingRequestDetails();
  virtual ~PairingRequestDetails();
  
  PairingRequestDetails(const PairingRequestDetails& from);
  
  inline PairingRequestDetails& operator=(const PairingRequestDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PairingRequestDetails& default_instance();
  
  void Swap(PairingRequestDetails* other);
  
  // implements Message ----------------------------------------------
  
  PairingRequestDetails* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PairingRequestDetails& from);
  void MergeFrom(const PairingRequestDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .vplex.ans.PairingRequestAttribute pairing_attributes = 1;
  inline int pairing_attributes_size() const;
  inline void clear_pairing_attributes();
  static const int kPairingAttributesFieldNumber = 1;
  inline const ::vplex::ans::PairingRequestAttribute& pairing_attributes(int index) const;
  inline ::vplex::ans::PairingRequestAttribute* mutable_pairing_attributes(int index);
  inline ::vplex::ans::PairingRequestAttribute* add_pairing_attributes();
  inline const ::google::protobuf::RepeatedPtrField< ::vplex::ans::PairingRequestAttribute >&
      pairing_attributes() const;
  inline ::google::protobuf::RepeatedPtrField< ::vplex::ans::PairingRequestAttribute >*
      mutable_pairing_attributes();
  
  // required string transaction_id = 2;
  inline bool has_transaction_id() const;
  inline void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 2;
  inline const ::std::string& transaction_id() const;
  inline void set_transaction_id(const ::std::string& value);
  inline void set_transaction_id(const char* value);
  inline void set_transaction_id(const char* value, size_t size);
  inline ::std::string* mutable_transaction_id();
  inline ::std::string* release_transaction_id();
  
  // @@protoc_insertion_point(class_scope:vplex.ans.PairingRequestDetails)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::vplex::ans::PairingRequestAttribute > pairing_attributes_;
  ::std::string* transaction_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_vplex_5fans_5fmessage_2eproto();
  friend void protobuf_AssignDesc_vplex_5fans_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_vplex_5fans_5fmessage_2eproto();
  
  void InitAsDefaultInstance();
  static PairingRequestDetails* default_instance_;
};
// ===================================================================


// ===================================================================

// UserDeviceMsg_t

// required fixed64 srcDeviceId = 1;
inline bool UserDeviceMsg_t::has_srcdeviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserDeviceMsg_t::set_has_srcdeviceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserDeviceMsg_t::clear_has_srcdeviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserDeviceMsg_t::clear_srcdeviceid() {
  srcdeviceid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcdeviceid();
}
inline ::google::protobuf::uint64 UserDeviceMsg_t::srcdeviceid() const {
  return srcdeviceid_;
}
inline void UserDeviceMsg_t::set_srcdeviceid(::google::protobuf::uint64 value) {
  set_has_srcdeviceid();
  srcdeviceid_ = value;
}

// required .vplex.ans.UserDeviceMsgType_t msgType = 2;
inline bool UserDeviceMsg_t::has_msgtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserDeviceMsg_t::set_has_msgtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserDeviceMsg_t::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserDeviceMsg_t::clear_msgtype() {
  msgtype_ = 1;
  clear_has_msgtype();
}
inline vplex::ans::UserDeviceMsgType_t UserDeviceMsg_t::msgtype() const {
  return static_cast< vplex::ans::UserDeviceMsgType_t >(msgtype_);
}
inline void UserDeviceMsg_t::set_msgtype(vplex::ans::UserDeviceMsgType_t value) {
  GOOGLE_DCHECK(vplex::ans::UserDeviceMsgType_t_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
}

// -------------------------------------------------------------------

// SessionExpiredDetails

// optional bool device_unlinked = 1 [default = false];
inline bool SessionExpiredDetails::has_device_unlinked() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SessionExpiredDetails::set_has_device_unlinked() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SessionExpiredDetails::clear_has_device_unlinked() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SessionExpiredDetails::clear_device_unlinked() {
  device_unlinked_ = false;
  clear_has_device_unlinked();
}
inline bool SessionExpiredDetails::device_unlinked() const {
  return device_unlinked_;
}
inline void SessionExpiredDetails::set_device_unlinked(bool value) {
  set_has_device_unlinked();
  device_unlinked_ = value;
}

// -------------------------------------------------------------------

// PairingRequestAttribute

// required string key = 1;
inline bool PairingRequestAttribute::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PairingRequestAttribute::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PairingRequestAttribute::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PairingRequestAttribute::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& PairingRequestAttribute::key() const {
  return *key_;
}
inline void PairingRequestAttribute::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void PairingRequestAttribute::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void PairingRequestAttribute::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PairingRequestAttribute::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* PairingRequestAttribute::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string value = 2;
inline bool PairingRequestAttribute::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PairingRequestAttribute::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PairingRequestAttribute::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PairingRequestAttribute::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& PairingRequestAttribute::value() const {
  return *value_;
}
inline void PairingRequestAttribute::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void PairingRequestAttribute::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void PairingRequestAttribute::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PairingRequestAttribute::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* PairingRequestAttribute::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PairingRequestDetails

// repeated .vplex.ans.PairingRequestAttribute pairing_attributes = 1;
inline int PairingRequestDetails::pairing_attributes_size() const {
  return pairing_attributes_.size();
}
inline void PairingRequestDetails::clear_pairing_attributes() {
  pairing_attributes_.Clear();
}
inline const ::vplex::ans::PairingRequestAttribute& PairingRequestDetails::pairing_attributes(int index) const {
  return pairing_attributes_.Get(index);
}
inline ::vplex::ans::PairingRequestAttribute* PairingRequestDetails::mutable_pairing_attributes(int index) {
  return pairing_attributes_.Mutable(index);
}
inline ::vplex::ans::PairingRequestAttribute* PairingRequestDetails::add_pairing_attributes() {
  return pairing_attributes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vplex::ans::PairingRequestAttribute >&
PairingRequestDetails::pairing_attributes() const {
  return pairing_attributes_;
}
inline ::google::protobuf::RepeatedPtrField< ::vplex::ans::PairingRequestAttribute >*
PairingRequestDetails::mutable_pairing_attributes() {
  return &pairing_attributes_;
}

// required string transaction_id = 2;
inline bool PairingRequestDetails::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PairingRequestDetails::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PairingRequestDetails::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PairingRequestDetails::clear_transaction_id() {
  if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
    transaction_id_->clear();
  }
  clear_has_transaction_id();
}
inline const ::std::string& PairingRequestDetails::transaction_id() const {
  return *transaction_id_;
}
inline void PairingRequestDetails::set_transaction_id(const ::std::string& value) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(value);
}
inline void PairingRequestDetails::set_transaction_id(const char* value) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(value);
}
inline void PairingRequestDetails::set_transaction_id(const char* value, size_t size) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PairingRequestDetails::mutable_transaction_id() {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  return transaction_id_;
}
inline ::std::string* PairingRequestDetails::release_transaction_id() {
  clear_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = transaction_id_;
    transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ans
}  // namespace vplex

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< vplex::ans::ANS_NotificationType_t>() {
  return vplex::ans::ANS_NotificationType_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< vplex::ans::UserDeviceMsgType_t>() {
  return vplex::ans::UserDeviceMsgType_t_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vplex_5fans_5fmessage_2eproto__INCLUDED
